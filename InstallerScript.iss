; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Терминал"


; Менять версию тут
#define MyAppVersion "2.6.2"

; Директория установки приложения по умолчанию
#define InstallDirectory "{commonpf64}\TerminalProgram"

; Имя файла установщика
#define OutputFileName "TerminalProgram_" + MyAppVersion + "_installer"

; Описание файла установщика
#define FileDescription "TerminalProgram"

#define MyAppPublisher "Абдулкаюмов Андрей"
#define MyAppExeName "TerminalProgram.exe"
#define MyAppAssocName "TerminalProgram File"
#define MyAppAssocExt ".myp"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt

; Относительный путь
#define PublishDirectory 'TerminalProgram\bin\Release\net8.0-windows\publish\win-x64'

#define OutputDirectory 'D:\0_Compiled_Installers\TerminalProgram'

; Относительный путь
#define LicenseFileDirectory 'LICENSE.md'

; Относительный путь
#define SetupIconFileDirectory 'TerminalProgram\Resources\MainLogo.ico'

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{DEE0A88B-092D-4E5E-A8C3-F4F35B17E73C}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
VersionInfoVersion={#MyAppVersion}
VersionInfoDescription={#FileDescription}
AppPublisher={#MyAppPublisher}
DefaultDirName={#InstallDirectory}
ChangesAssociations=yes
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
LicenseFile={#LicenseFileDirectory}
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest

; Перед началом установки показывается диалог с выбором режима установки:
; 1. Для всех как админ
; 2. Только для текущего пользователя
PrivilegesRequiredOverridesAllowed=dialog

; Добавляем ярлык приложения в Панели управления
UninstallDisplayIcon={app}\{#MyAppExeName}

OutputDir={#OutputDirectory}\{#MyAppVersion}
OutputBaseFilename={#OutputFileName}
SetupIconFile={#SetupIconFileDirectory}
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "russian"; MessagesFile: "compiler:Languages\Russian.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
; Исполняемый файл приложения
Source: "{#PublishDirectory}\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion

; Служебные файлы
Source: "{#PublishDirectory}\*"; DestDir: "{app}"; Excludes: "*.pdb"; Flags: ignoreversion

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""
Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: ".myp"; ValueData: ""

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[Code]
function InitializeSetup: Boolean;
var
  InstalledVersion: string;
begin
  // Получаем текущую версию установленного приложения
  if RegQueryStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{#SetupSetting("AppId")}_is1', 'DisplayVersion', InstalledVersion) then
  begin
    // Проверяем версию и обновляем, если необходимо
    if CompareStr(InstalledVersion, '{#SetupSetting("AppVersion")}') <> 0 then
    begin
      MsgBox('Сейчас установлена версия ' + InstalledVersion + #13#10 +
             'Приложение будет обновлено до версии ' + '{#SetupSetting("AppVersion")}',
             mbInformation, MB_OK);
      Result := True; // Продолжаем установку
    end
    else
    begin
      if MsgBox('Версия приложения ' + '{#SetupSetting("AppVersion")}' + ' уже установлена.' + #13#10#13#10 + 'Переустановить?', mbInformation, MB_YesNo) = IDYES then
      begin
        Result := True; // Продолжаем установку
      end
      else
      begin
        Result := False; // Отменяем установку
      end      
    end;
  end
  else
  begin
    // Продолжаем установку
    Result := True;
  end;
end;

// Обновление версии приложения в реестре (срабатывает при обновлении)
procedure CurStepChanged(CurStep: TSetupStep);
begin
  if CurStep = ssPostInstall then
  begin
    // Обновляем версию в реестре
    RegWriteStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{#SetupSetting("AppId")}_is1', 'DisplayVersion', '{#SetupSetting("AppVersion")}');
  end;
end;

// Удаление записи из реестра при удалении приложения
procedure DeinitializeUninstall();
begin              
  RegDeleteKeyIncludingSubkeys(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{#SetupSetting("AppId")}_is1');
end;